variables:
  app_id: 'visualization.goom'

trigger:
  branches:
    include:
    - Matrix
    - releases/*
  paths:
    include:
    - '*'
    exclude:
    - 'debian/*'

jobs:
  - job: Windows

    pool:
      vmImage: 'VS2017-Win2016'

    strategy:
      matrix:
        Win32:
          GENERATOR: "Visual Studio 15 2017"
          ARCHITECTURE: Win32
          CONFIGURATION: Release
          CMAKE_DEFINES: -DCMAKE_SYSTEM_NAME=Windows -DCMAKE_SYSTEM_VERSION="10.0.17763.0"
        Win64:
          GENERATOR: "Visual Studio 15 2017"
          ARCHITECTURE: x64
          CONFIGURATION: Release
          CMAKE_DEFINES: -DCMAKE_SYSTEM_NAME=Windows -DCMAKE_SYSTEM_VERSION="10.0.17763.0"
        Win64-UWP:
          GENERATOR: "Visual Studio 15 2017"
          ARCHITECTURE: x64
          CONFIGURATION: Release
          CMAKE_DEFINES: -DCMAKE_SYSTEM_NAME=WindowsStore -DCMAKE_SYSTEM_VERSION="10.0.17763.0"
# Windows ARM compiler is not so good. Maybe we should use a later version than VS 15?          
#d:\a\1\visualization.goom\lib\goom\src\tentacles_fx.cpp(360): fatal error C1001: An internal error has occurred in the compiler. [D:\a\1\s\build\visualization.goom-prefix\src\visualization.goom-build\lib\goom\goom.vcxproj] [D:\a\1\s\build\visualization.goom.vcxproj]
#    (compiler file 'd:\agent\_work\4\s\src\vctools\compiler\utc\src\p2\main.c', line 187)
#     To work around this problem, try simplifying or changing the program near the locations listed above.
#    Please choose the Technical Support command on the Visual C++ 
#     Help menu, or open the Technical Support help file for more information
#    
#    Internal Compiler Error in C:\Program Files (x86)\Microsoft Visual Studio\2017\Enterprise\VC\Tools\MSVC\14.16.27023\bin\HostX64\arm64\CL.exe.  You will be prompted to send an error report to Microsoft later.tubes.cpp
#         ARM64-UWP:
#          GENERATOR: "Visual Studio 15 2017"
#          ARCHITECTURE: ARM64
#          CONFIGURATION: Release
#          CMAKE_DEFINES: -DCMAKE_SYSTEM_NAME=WindowsStore -DCMAKE_SYSTEM_VERSION="10.0.17763.0"

    workspace:
      clean: all

    steps:

    - script: |
        cd ..
        git clone --branch master --depth=1 https://github.com/xbmc/xbmc.git kodi
        cd $(Build.SourcesDirectory)
        mkdir build
        cd build
        mkdir "definition/$(app_id)"
        echo $(app_id) . . > definition/$(app_id)/$(app_id).txt
        mklink /J "$(Pipeline.Workspace)/$(app_id)" "$(Build.SourcesDirectory)"

    - task: CMake@1
      inputs:
        workingDirectory: 'build'
        cmakeArgs: '-T host=x64 -G "$(GENERATOR)" -A $(ARCHITECTURE) $(CMAKE_DEFINES) -DADDONS_TO_BUILD=$(app_id) -DCMAKE_BUILD_TYPE=$(CONFIGURATION) -DADDONS_DEFINITION_DIR=$(Pipeline.Workspace)/$(app_id)/build/definition -DADDON_SRC_PREFIX=../.. -DCMAKE_INSTALL_PREFIX=../../kodi/addons -DPACKAGE_ZIP=1 ../../kodi/cmake/addons'

    - task: CMake@1
      inputs:
        workingDirectory: 'build'
        cmakeArgs: '--build . --config $(CONFIGURATION) --target $(app_id)'
